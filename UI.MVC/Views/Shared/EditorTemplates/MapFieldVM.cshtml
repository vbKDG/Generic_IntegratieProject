@model D.UI.MVC.Models.Fields.MapFieldVm

@if (ViewBag.index == 0)
{
    <fieldset>  
        <meta charset="utf-8">  
        <meta name="viewport" content="width=device-width, initial-scale=1">  
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"> 
        <link rel="stylesheet" href="~/css/maps2.css"> 
        <script src="@Url.Content("~/js/Maps.js")"></script>


       
  
        @*<div class="text-dark" id="floating-panel">
            <input id="address" type="textbox" value="België, Antwerpen">
            <input id="submit" type="button" value="Geocode">
        </div>*@
        <input id="pac-input" class="controls" type="text" placeholder="Search Box">
        <input id="search-Button" type="button" value="Add Location"/>
        <table>
            <tr>
                <td>  <div id="map" style="height: 350px; width: 700px;">  </div>  </td>
                <td>
                    <div id="locationRows">
                
                    </div>  
                </td>
            </tr>
         
               
        </table>
             

      
      
        <script>
            
            
            var LocationIndex = 0;
            var locationTracker = [];
            $(document).ready(function() {
                console.log('test');
                var locationCount = (document.getElementsByClassName('location')).length;
                console.log('locationcount: ' + locationCount);
                
                // locationTracker = [locationCount];
                for (var i = 0; i < locationCount; i++) {
                    locationTracker[i] = true;
                }
                console.log(locationTracker)
            });            
            /*window.onload = function() {
                console.log('test');
                var locationCount = (document.getElementsByClassName('location')).length;
                console.log('locationcount: ' + locationCount);
                
               // locationTracker = [locationCount];
                for (var i = 0; i < locationCount; i++) {
                    locationTracker[i] = true;
                }
                console.log(locationTracker);
                
            };*/
 
            /*function initAutocomplete() {
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 13,
                    center: {lat: 51.2171918, lng: 4.4212529},
                    mapTypeControl: false,
                    fullscreenControl : false
                    

                });
                var geocoder = new google.maps.Geocoder();
                var marker = new google.maps.Marker({  position:  new google.maps.LatLng( 51.2171918,  4.4212529 ),map: map,  draggable:true });  

                document.getElementById('submit').addEventListener('click', function() {
                    geocodeAddress(geocoder, map, marker);
                });
            }*/
        function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 13,
            center: {lat: 51.2171918, lng: 4.4212529},
            mapTypeControl: false,
            fullscreenControl : false
        });
        var geocoder = new google.maps.Geocoder();
        // Create the search box and link it to the UI element.
        var input = document.getElementById('pac-input');
        var button = document.getElementById('search-Button');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(button);


        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
            searchBox.setBounds(map.getBounds());
        });

        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        button.addEventListener("click", function() {
            var places = searchBox.getPlaces();
            console.log(locationTracker);
            var x = true;
            var teller = 0;
            while (x) {
                if (locationTracker[teller]) {
                    LocationIndex = teller;
                    x = false;
                } else {
                    teller++;

                }
                if ( teller > document.getElementsByClassName('location').length) {
                    x = false;
                }
            }
            LocationIndex = teller;
          //  console.log(teller);
          //  console.log(LocationIndex);
          //  console.log(document.getElementsByClassName('location').length);
            if (LocationIndex < document.getElementsByClassName('location').length) {

                var address = document.getElementById('pac-input').value;
                geocoder.geocode({ 'address': address },
                    function(results, status) {
                        if (status === 'OK') {


                            var lat = results[0].geometry.location.lat().toString().replace('.', ',');
                            var lng = results[0].geometry.location.lng().toString().replace('.', ',');

                            var latitude = '#MapFieldVms_' + LocationIndex + '__latitude';
                            var longitude = '#MapFieldVms_' + LocationIndex + '__longitude';
                            $(latitude).attr('value', lat);
                            $(longitude).attr('value', lng);
                            locationTracker[teller] = false;

                            AddLocation(results[0].formatted_address, LocationIndex);


                            console.log(latitude);
                            console.log(longitude);

                            $('#pac-input').val('');
                        }

                    });
                if (places.length == 0) {
                    return;
                }

                // Clear out the old markers.
                markers.forEach(function(marker) {
                    marker.setMap(null);
                });
                markers = [];

                // For each place, get the icon, name and location.
                var bounds = new google.maps.LatLngBounds();
                places.forEach(function(place) {
                    if (!place.geometry) {
                        console.log("Returned place contains no geometry");
                        return;
                    }
                    var icon = {
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(25, 25)
                    };

                    // Create a marker for each place.
                    markers.push(new google.maps.Marker({
                        map: map,
                        icon: icon,
                        title: place.name,
                        position: place.geometry.location
                    }));

                    if (place.geometry.viewport) {
                        // Only geocodes have viewport.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);

            } else {
                alert("Max Locations");
            }
        });
    }
            
   /*     function ReadAddress(lat,lng) {
                var latlng = new google.maps.LatLng(lat, lng);
                geocoder.geocode({
                    'latLng': latlng
                }, function (results, status) {
                    if (status === google.maps.GeocoderStatus.OK) {
                        if (results[1]) {
                            console.log(results[1]);
                        } else {
                            alert('No results found');
                        }
                    } else {
                        alert('Geocoder failed due to: ' + status);
                    }
                });
            }*/
      /*  function geocodeAddress(geocoder, resultsMap) {
                console.log(locationTracker);
                var x = true;
                var teller = 0;
                while (x) {
                    if (locationTracker[teller]) {
                        LocationIndex = teller;
                        x = false;
                    } else {
                        teller++;

                    }
                   if ( teller > document.getElementsByClassName('location').length) {
                       x = false;
                   }
                }
                console.log(teller);
                
                if(LocationIndex  < document.getElementsByClassName('location').length){
                    var address = document.getElementById('address').value;
                    var lat = document.getElementById("latitude");
                    geocoder.geocode({'address': address}, function(results, status) {
                        if (status === 'OK') {
                            // console.log(results[0].geometry.location.lat());
                            //console.log(results[0].lat);
                            //  console.log(results.getfrom);
                            // var lat = double.parse( results[0].geometry.location.lat();
                            var lat = results[0].geometry.location.lat().toString().replace('.', ',');
                            var lng = results[0].geometry.location.lng().toString().replace('.', ',');
                            // console.log(lat);
                            // console.log(lng);
                            //  console.log( LocationIndex);
                            var latitude = '#MapFieldVms_' + LocationIndex + '__latitude';
                            var longitude = '#MapFieldVms_' + LocationIndex + '__longitude';
                            $(latitude).attr('value',lat);
                            $(longitude).attr('value',lng);
                            locationTracker[teller] = false;
                           

                            resultsMap.setCenter(results[0].geometry.location);
                            
//                             marker = new google.maps.Marker({
//                                map: resultsMap,
//                                position: results[0].geometry.location
//                            });
                            marker.setPosition( new google.maps.LatLng( results[0].lat, results[0].lng ) );
                          //  map.panTo( new google.maps.LatLng( 0, 0 ) );
                            var latlng = new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng());
                            geocoder.geocode({
                                'latLng': latlng
                            }, function (results, status) {
                                if (status === google.maps.GeocoderStatus.OK) {
                                    if (results[1]) {
                                        console.log(results[1].formatted_address);
                                        AddLocation(results[1].formatted_address,LocationIndex);
                                        //var input = results[1].formatted_address;
                                    


                                    } else {
                                        alert('No results found');
                                    }
                                } else {
                                    alert('Geocoder failed due to: ' + status);
                                }
                            });
                        

                        } else {
                            alert('Geocode was not successful for the following reason: ' + status);
                        }
                        LocationIndex++;
                        console.log('locationindex :' + LocationIndex);
                    });
                
                
                } else {
                    alert('Max amount of locations');
                }
               
            }*/


      
            function AddLocation (input,index) {

                var rowCount = $('.locationRow').length;
                var inputString = "";

                inputString += '<p class="locationText" >Location '+ index  + '</p>';        
                inputString += '<p>' + input +' <a href="javascript:void(0);" class="remRow">Remove</a> </p>';        
                $("#locationRows").append('<div id="locationRow'+ index  +'" class="locationRow">' + inputString + '</div>');

                var locationtexts = document.getElementsByClassName('locationText');
                for (var i = 0; i < locationtexts.length; i++) {
                    locationtexts[i].innerText = 'Location ' + (i + 1);
                }
            };
            

            $("#locationRows").on('click', '.remRow', function () {
     
   
               // var max = document.getElementsByClassName('location');
               // var max = max.length;
                var rowIndex = (this).closest(".locationRow").id;
                 rowIndex = rowIndex.charAt(rowIndex.length - 1) ;
                
                var latitude = '#MapFieldVms_' + rowIndex + '__latitude';
                var longitude = '#MapFieldVms_' + rowIndex + '__longitude';
                $(latitude).attr('value',0);
                $(longitude).attr('value',0);
                locationTracker[rowIndex] = true;
               
               (this).closest(".locationRow").remove();

               var locationtexts = document.getElementsByClassName('locationText');
               for (var i = 0; i < locationtexts.length; i++) {
                   locationtexts[i].innerText = 'Location ' + (i + 1);
               }


   
        
            });
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBpGkcxEKiXUYAvr2HPj9bhYvs0uZsllW4&libraries=places&callback=initAutocomplete"
                async defer></script>
    
    </fieldset> 
}

<div class="location">
    <input  asp-for="latitude" type="hidden" itemtype="double"  />
    <input asp-for="longitude" type="hidden" />
</div>

@*
@model D.UI.MVC.Models.Fields.MapFieldVm

@if (ViewBag.index == 0)
{
    <fieldset>  
        <meta charset="utf-8">  
        <meta name="viewport" content="width=device-width, initial-scale=1">  
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"> 
        <link rel="stylesheet" href="~/css/maps.css"> 
        <script src="@Url.Content("~/js/Maps.js")"></script>


        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>  
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>  
  
        <div class="text-dark" id="floating-panel">
            <input id="address" type="textbox" value="België, Antwerpen">
            <input id="submit" type="button" value="Geocode">
        </div>
        <table>
            <tr>
                <td>  <div id="map" style="height: 350px; width: 700px;">  </div>  </td>
                <td>
                    <div id="locationRows">
                
                    </div>  
                </td>
            </tr>
         
               
        </table>
             

      
      
        <script>
            
            
            var LocationIndex = 0;       
            var locationTracker = [];
            
            window.onload = function() {
                var locationCount = (document.getElementsByClassName('location')).length;
                for (var i = 0; i < locationCount; i++) {
                    locationTracker[i] = true;
                }
                
            };
//            function myMap() {  
//                var myCenter = new google.maps.LatLng(51.2171918, 4.4212529);  
//                var mapProp = { center: myCenter, zoom: 15, scrollwheel: false, draggable: true, mapTypeId: google.maps.MapTypeId.ROADMAP };  
//                var map = new google.maps.Map(document.getElementById("map"), mapProp);  
//                var marker = new google.maps.Marker({ position: myCenter,  draggable:true });  
//                marker.setMap(map);  
//            }  
            function initAutocomplete() {
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 13,
                    center: {lat: 51.2171918, lng: 4.4212529},
                    mapTypeControl: false,
                    fullscreenControl : false
                    

                });
                var geocoder = new google.maps.Geocoder();
                var marker = new google.maps.Marker({  position:  new google.maps.LatLng( 51.2171918,  4.4212529 ),map: map,  draggable:true });  

                document.getElementById('submit').addEventListener('click', function() {
                    geocodeAddress(geocoder, map, marker);
                });
            }

            function ReadAddress(lat,lng) {
                var latlng = new google.maps.LatLng(lat, lng);
                geocoder.geocode({
                    'latLng': latlng
                }, function (results, status) {
                    if (status === google.maps.GeocoderStatus.OK) {
                        if (results[1]) {
                            console.log(results[1]);
                        } else {
                            alert('No results found');
                        }
                    } else {
                        alert('Geocoder failed due to: ' + status);
                    }
                });
            }
            function geocodeAddress(geocoder, resultsMap) {
                console.log(locationTracker);
                var x = true;
                var teller = 0;
                while (x) {
                    if (locationTracker[teller]) {
                        LocationIndex = teller;
                        x = false;
                    } else {
                        teller++;

                    }
                   if ( teller > document.getElementsByClassName('location').length) {
                       x = false;
                   }
                }
                console.log(teller);
                
                if(LocationIndex  < document.getElementsByClassName('location').length){
                    var address = document.getElementById('address').value;
                    var lat = document.getElementById("latitude");
                    geocoder.geocode({'address': address}, function(results, status) {
                        if (status === 'OK') {
                            // console.log(results[0].geometry.location.lat());
                            //console.log(results[0].lat);
                            //  console.log(results.getfrom);
                            // var lat = double.parse( results[0].geometry.location.lat();
                            var lat = results[0].geometry.location.lat().toString().replace('.', ',');
                            var lng = results[0].geometry.location.lng().toString().replace('.', ',');
                            // console.log(lat);
                            // console.log(lng);
                            //  console.log( LocationIndex);
                            var latitude = '#MapFieldVms_' + LocationIndex + '__latitude';
                            var longitude = '#MapFieldVms_' + LocationIndex + '__longitude';
                            $(latitude).attr('value',lat);
                            $(longitude).attr('value',lng);
                            locationTracker[teller] = false;
                           

                            resultsMap.setCenter(results[0].geometry.location);
                            
//                             marker = new google.maps.Marker({
//                                map: resultsMap,
//                                position: results[0].geometry.location
//                            });
                            marker.setPosition( new google.maps.LatLng( results[0].lat, results[0].lng ) );
                          //  map.panTo( new google.maps.LatLng( 0, 0 ) );
                            var latlng = new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng());
                            geocoder.geocode({
                                'latLng': latlng
                            }, function (results, status) {
                                if (status === google.maps.GeocoderStatus.OK) {
                                    if (results[1]) {
                                        console.log(results[1].formatted_address);
                                        AddLocation(results[1].formatted_address,LocationIndex);
                                        //var input = results[1].formatted_address;
                                    


                                    } else {
                                        alert('No results found');
                                    }
                                } else {
                                    alert('Geocoder failed due to: ' + status);
                                }
                            });
                        

                        } else {
                            alert('Geocode was not successful for the following reason: ' + status);
                        }
                        LocationIndex++;
                        console.log('locationindex :' + LocationIndex);
                    });
                
                
                } else {
                    alert('Max amount of locations');
                }
               
            }


      
            function AddLocation (input,index) {

                var rowCount = $('.locationRow').length;
                var inputString = "";

                inputString += '<p class="locationText" >Location '+ index  + '</p>';        
                inputString += '<p>' + input +' <a href="javascript:void(0);" class="remRow">Remove</a> </p>';        
                $("#locationRows").append('<div id="locationRow'+ index  +'" class="locationRow">' + inputString + '</div>');

                var locationtexts = document.getElementsByClassName('locationText');
                for (var i = 0; i < locationtexts.length; i++) {
                    locationtexts[i].innerText = 'Location ' + (i + 1);
                }
            };
            

            $("#locationRows").on('click', '.remRow', function () {
     
   
               // var max = document.getElementsByClassName('location');
               // var max = max.length;
                var rowIndex = (this).closest(".locationRow").id;
                 rowIndex = (rowIndex.charAt(rowIndex.length - 1) -1) ;
                
                var latitude = '#MapFieldVms_' + rowIndex + '__latitude';
                var longitude = '#MapFieldVms_' + rowIndex + '__longitude';
                $(latitude).attr('value',0);
                $(longitude).attr('value',0);
                locationTracker[rowIndex] = true;
               
               (this).closest(".locationRow").remove();

               var locationtexts = document.getElementsByClassName('locationText');
               for (var i = 0; i < locationtexts.length; i++) {
                   locationtexts[i].innerText = 'Location ' + (i + 1);
               }


   
        
            });
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBpGkcxEKiXUYAvr2HPj9bhYvs0uZsllW4&libraries=places&callback=initAutocomplete"
                async defer></script>
    
    </fieldset> 
}

<div class="location">
<input  asp-for="latitude" type="hidden" itemtype="double"  />
<input asp-for="longitude" type="hidden" />
</div>
*@



