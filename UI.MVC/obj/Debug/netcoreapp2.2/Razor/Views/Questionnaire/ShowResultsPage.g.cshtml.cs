#pragma checksum "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "85b90faad5300d828f35f85d20a9c58d6525bcae"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Questionnaire_ShowResultsPage), @"mvc.1.0.view", @"/Views/Questionnaire/ShowResultsPage.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Questionnaire/ShowResultsPage.cshtml", typeof(AspNetCore.Views_Questionnaire_ShowResultsPage))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\_ViewImports.cshtml"
using UI.MVC;

#line default
#line hidden
#line 2 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\_ViewImports.cshtml"
using UI.MVC.Models;

#line default
#line hidden
#line 1 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
using Domain;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"85b90faad5300d828f35f85d20a9c58d6525bcae", @"/Views/Questionnaire/ShowResultsPage.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fe8ea135b7da2bced915af909ed829e56536b857", @"/Views/_ViewImports.cshtml")]
    public class Views_Questionnaire_ShowResultsPage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<QuestionResultModel>
    {
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(43, 3612, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85b90faad5300d828f35f85d20a9c58d6525bcae3449", async() => {
                BeginContext(49, 494, true);
                WriteLiteral(@"
<a class=""previousButton"" onclick=""previousPage()"">&laquo; Previous</a>
<div class=""row center-block"">
    <div class=""dark-overlay"">
        <div class=""container"">
            <div class=""d-flex justify-content-center"" >
                <div class=""card bg-light text-center card-form col-lg-4"">
                    <div class=""card-body"" id=""card"">
                        <h1>Questionnaire results</h1>
                        
                            <h4><h3>Questionnaire: ");
                EndContext();
                BeginContext(544, 24, false);
#line 13 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                              Write(Model.Questionnaire.Name);

#line default
#line hidden
                EndContext();
                BeginContext(568, 78, true);
                WriteLiteral("</h3>\r\n                                <p>The questionnaire has been answered ");
                EndContext();
                BeginContext(647, 28, false);
#line 14 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                                  Write(Model.AnsweredQuestionAmount);

#line default
#line hidden
                EndContext();
                BeginContext(675, 230, true);
                WriteLiteral(" time(s).</p></h4>\r\n                        <hr />\r\n                        \r\n                            <div class=\"form-group text-dark\">\r\n                               \r\n                                <table class=\"table\">\r\n");
                EndContext();
#line 20 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                     if (Model.Questions == null)
                                    {

#line default
#line hidden
                BeginContext(1011, 117, true);
                WriteLiteral("                                        <p>Unfortunately there is no data collected for this questionnaire yet.</p>\r\n");
                EndContext();
#line 23 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                    }
                                    else
                                    {
                                        for (var i = 0; i < Model.Questions.Count(); i++)
                                        {

#line default
#line hidden
                BeginContext(1382, 160, true);
                WriteLiteral("                                            <tr>\r\n                                                <td>\r\n                                                    <h4>");
                EndContext();
                BeginContext(1543, 39, false);
#line 30 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                   Write(Model.Questions.ToList()[i].TheQuestion);

#line default
#line hidden
                EndContext();
                BeginContext(1582, 7, true);
                WriteLiteral("</h4>\r\n");
                EndContext();
#line 31 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                     foreach (var o in @Model.Questions.ToList()[i].Options)
                                                    {
                                                        

#line default
#line hidden
                BeginContext(1811, 11, false);
#line 33 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                   Write(o.TheOption);

#line default
#line hidden
                EndContext();
#line 33 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                                    
                                                        foreach (var aqa in @Model.OptionsAmounts)
                                                        {
                                                            if (aqa.OptionId == o.OptionId)
                                                            {
                                                                if (o.Question.QuestionType == QuestionType.CHECK_BOX)
                                                                {

#line default
#line hidden
                BeginContext(2326, 76, true);
                WriteLiteral("                                                                    <span> (");
                EndContext();
                BeginContext(2403, 9, false);
#line 40 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                                       Write(aqa.Count);

#line default
#line hidden
                EndContext();
                BeginContext(2412, 10, true);
                WriteLiteral(")</span>\r\n");
                EndContext();
#line 41 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                                }
                                                                else
                                                                {
                                                                    double percentage = Convert.ToDouble(aqa.Count) / Convert.ToDouble(@Model.AnsweredQuestionAmount) * 100;

#line default
#line hidden
                BeginContext(2800, 76, true);
                WriteLiteral("                                                                    <span> (");
                EndContext();
                BeginContext(2877, 9, false);
#line 45 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                                       Write(aqa.Count);

#line default
#line hidden
                EndContext();
                BeginContext(2886, 2, true);
                WriteLiteral(") ");
                EndContext();
                BeginContext(2889, 27, false);
#line 45 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                                                   Write(percentage.ToString("0.00"));

#line default
#line hidden
                EndContext();
                BeginContext(2916, 10, true);
                WriteLiteral("%</span>\r\n");
                EndContext();
#line 46 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                                }
                                                            }
                                                        }

#line default
#line hidden
                BeginContext(3115, 62, true);
                WriteLiteral("                                                        <br>\r\n");
                EndContext();
#line 50 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                                    }

#line default
#line hidden
                BeginContext(3232, 106, true);
                WriteLiteral("                                                </td>\r\n                                            </tr>\r\n");
                EndContext();
#line 53 "C:\Users\sefik\OneDrive\Documenten\GitHub\Generic_IntegratieProject\UI.MVC\Views\Questionnaire\ShowResultsPage.cshtml"
                                        }
                                    }

#line default
#line hidden
                BeginContext(3420, 228, true);
                WriteLiteral("                                </table>\r\n                                \r\n                            </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<QuestionResultModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
